*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.15 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

@font-face {
  font-family: "Arsenal";

  font-weight: 400;

  font-display: swap;

  font-style: normal;

  src:
      local("Arsenal"),
      url("../themes/tw/fonts/Arsenal/Regular.ttf") format("truetype"),
      url("../themes/tw/fonts/Arsenal/Regular.woff") format("woff");
}

@font-face {
  font-family: "Arsenal";

  font-weight: 400;

  font-display: swap;

  font-style: italic;

  src:
      local("Arsenal"),
      url("../themes/tw/fonts/Arsenal/Italic.ttf") format("truetype"),
      url("../themes/tw/fonts/Arsenal/Italic.woff") format("woff");
}

@font-face {
  font-family: "Arsenal";

  font-weight: 700;

  font-display: swap;

  font-style: normal;

  src:
      local("Arsenal"),
      url("../themes/tw/fonts/Arsenal/Bold.ttf") format("truetype"),
      url("../themes/tw/fonts/Arsenal/Bold.woff") format("woff");
}

.shower {
  &.list {
    --tw-bg-opacity: 1;
    background-color: rgb(152 164 176 / var(--tw-bg-opacity, 1));
  }
  &.list {
    .slide {
      border-radius: 0.375rem;
    }
    .slide {
      &.active {
        --tw-shadow: 0 0 0 1px #ff7d43,0 0 0 20px #ff7d43,0 20px 50px rgb(0 0 0 / 30%);
        --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color), 0 0 0 20px var(--tw-shadow-color), 0 20px 50px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }
    }
  }
  &.full {
    --tw-bg-opacity: 1;
    background-color: rgb(44 60 68 / var(--tw-bg-opacity, 1));
  }
  h1,
    h2,
    h3,
    p,
    a,
    li,
    figcaption {
    font-family: Arsenal, sans-serif;
  }
  .slide {
    --tw-bg-opacity: 1;
    background-color: rgb(44 60 68 / var(--tw-bg-opacity, 1));
  }
  .slide {
    padding: 24px 90px 0;
  }
  .slide {
    --tw-shadow: 0 20px 50px rgb(0 0 0 / 30%);
    --tw-shadow-colored: 0 20px 50px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  .slide {
    &::after {
      margin-top: 15px;
    }
    &::after {
      border-radius: 0.125rem;
    }
    &::after {
      --tw-bg-opacity: 1;
      background-color: rgb(34 34 34 / var(--tw-bg-opacity, 1));
    }
    &::after {
      font-family: Arsenal, sans-serif;
    }
    &::after {
      line-height: 1.5;
      transform: translateX(70px);
      /* @apply content-none; */
    }
    h2 {
      font-size: 52px;
    }
    h2 {
      &.shout {
        margin: 0px;
      }
      &.shout {
        font-size: 4.5rem;
        line-height: 1;
      }
    }
    .shout h2 {
      margin: 0px;
    }
    a {
      --tw-text-opacity: 1;
      color: rgb(255 125 67 / var(--tw-text-opacity, 1));
    }
    a {
      text-decoration-line: none;
    }
    a {
      &.copyright {
        border-radius: 0.125rem;
      }
      &.copyright {
        --tw-bg-opacity: 1;
        background-color: rgb(255 125 67 / var(--tw-bg-opacity, 1));
      }
      &.copyright {
        background-image: none;
      }
      &.copyright {
        padding: 3px 10px;
      }
      &.copyright {
        font-weight: 700;
      }
      &.copyright {
        text-transform: uppercase;
      }
      &.copyright {
        --tw-text-opacity: 1;
        color: rgb(44 60 68 / var(--tw-text-opacity, 1));
      }
      &.copyright {
        transition-property: opacity;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: .3s;
      }
      &.copyright {
        &:hover {
          opacity: 0.8;
        }
      }
      &:has(img) {
        background-image: none;
      }
    }
    h2,
      h3,
      p,
      figure p,
      figcaption,
      p.note,
      li,
      li::before {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity, 1));
    }
    ol,
      ul {
      line-height: 1.8;
    }
    ol,
      ul {
      li {
        font-size: 28px;
      }
    }
    blockquote {
      margin-bottom: 0.5rem;
    }
    blockquote {
      &::before {
        --tw-text-opacity: 1;
        color: rgb(152 164 176 / var(--tw-text-opacity, 1));
      }
    }
    pre {
      border-radius: 0.125rem;
    }
    pre {
      --tw-bg-opacity: 1;
      background-color: rgb(34 34 34 / var(--tw-bg-opacity, 1));
    }
    pre {
      &.place {
        width: 80%;
      }
      code {
        padding-bottom: 0px;
      }
      code {
        padding-top: 0px;
      }
      code {
        font-size: 1.125rem;
        line-height: 1.75rem;
      }
    }
    h2 + picture {
      margin-left: 0.5rem;
    }
    table {
      th,
        td {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity, 1));
      }
      th[scope="column"] {
        text-align: center;
      }
      th {
        font-size: 18px;
      }
      td {
        font-size: 20px;
      }
      tr {
        --color-line: #98a4b0;
      }
      img {
        margin-left: auto;
        margin-right: auto;
      }
    }
    footer {
      --tw-bg-opacity: 1;
      background-color: rgb(255 125 67 / var(--tw-bg-opacity, 1));
    }
    footer {
      --tw-text-opacity: 1;
      color: rgb(34 34 34 / var(--tw-text-opacity, 1));
    }
    footer {
      line-height: 1.2;
    }
  }
}

.custom-scrollbar {
  &::-webkit-scrollbar {
    width: 18px;
  }
  &::-webkit-scrollbar-track,
    &::-webkit-scrollbar-thumb {
    border-radius: 0.125rem;
  }
  &::-webkit-scrollbar-track {
    --tw-bg-opacity: 1;
    background-color: rgb(44 60 68 / var(--tw-bg-opacity, 1));
  }
  &::-webkit-scrollbar-thumb {
    --tw-bg-opacity: 1;
    background-color: rgb(255 125 67 / var(--tw-bg-opacity, 1));
  }
  &::-webkit-scrollbar-button {
    display: none;
  }
  @supports not selector(::-webkit-scrollbar) {
    scrollbar-color: #ff7d43 transparent;

    scrollbar-width: thin;
  }
}

.toc {
  position: relative;
  overflow: auto;
  border-radius: 1rem;
  padding: 3rem;
  font-size: 1.5rem;
  line-height: 2rem;
  .toc__list-item {
    display: grid;
  }
  .toc__list-item {
    grid-template-columns: auto max-content;
  }
  .toc__list-item {
    gap: 0 1ch;
  }
  .toc__list-item {
    font-family: Arsenal, sans-serif;
  }
  .toc__list-item {
    grid-template-areas: "chapter page";
    align-items: end;
  }
  .toc__list-link {
    display: grid;
  }
  .toc__list-link {
    grid-template-columns: auto max-content;
  }
  .toc__list-link {
    gap: 0 1ch;
  }
  .toc__list-link {
    background-image: none !important;
  }
  .toc__list-link {
    font-family: Arsenal, sans-serif;
  }
  .toc__list-link {
    --tw-text-opacity: 1 !important;
    color: rgb(255 255 255 / var(--tw-text-opacity, 1)) !important;
  }
  .toc__list-link {
    grid-template-areas: "chapter page";
    align-items: end;
    &:hover {
      --tw-text-opacity: 1 !important;
      color: rgb(255 125 67 / var(--tw-text-opacity, 1)) !important;
    }
  }
  .toc__name {
    position: relative;
  }
  .toc__name {
    margin-bottom: 0px;
  }
  .toc__name {
    overflow: hidden;
  }
  .toc__name {
    font-family: Arsenal, sans-serif;
  }
  .toc__name::after {
    content: var(--tw-content);
    position: absolute;
  }
  .toc__name::after {
    content: var(--tw-content);
    padding-left: 0.25ch;
  }
  .toc__name::after {
    content: var(--tw-content);
    text-align: right;
  }
  .toc__name::after {
    --tw-content: ' . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ' '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ' '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ';
    content: var(--tw-content);
  }
  .toc__name {
    grid-area: chapter;
  }
}

.dots {
  --linear-gradient: linear-gradient(currentColor 0 0);
  background:
      var(--linear-gradient) 0 100%,
      var(--linear-gradient) 50% 100%,
      var(--linear-gradient) 100% 100%;
  background-size: 10px calc(100% - 6px);
  background-repeat: no-repeat;
  &::before {
    position: absolute;
  }
  &::before {
    left: 0px;
  }
  &::before {
    top: 0px;
  }
  &::before {
    height: 10px;
  }
  &::before {
    width: 10px;
  }
  &::before {
    background-color: currentColor;
  }
  &::before {
    border-radius: 50%;
  }
}

.loader {
  width: -moz-fit-content;
  width: fit-content;
  font-family: Arsenal, sans-serif;
  font-size: 62px;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 1.5;
  color: transparent;
  -webkit-text-stroke: 2px #fff;
  background:
      radial-gradient(1.13em at 50% 1.6em, #fff 99%, transparent 101%) calc(50% - 1.6em)
        0/3.2em 100% text,
      radial-gradient(1.13em at 50% -0.8em, transparent 99%, #fff 101%) 50% 0.8em/3.2em
        100% repeat-x text;
}

.upload-btn-iframe {
  transition: background-color 1s 200ms;
  &::before {
    position: absolute;
  }
  &::before {
    left: -100%;
  }
  &::before {
    top: 0px;
  }
  &::before {
    z-index: 1;
  }
  &::before {
    height: 100%;
  }
  &::before {
    width: 100%;
  }
  &::before {
    opacity: 0;
  }
  &::before {
    transition-property: none;
  }
  &::before {
    --tw-content: '';
    content: var(--tw-content);
  }
  &::before {
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.8),
        transparent
      );
  }
  &:hover {
    --tw-translate-x: -0.25rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &:hover {
    --tw-translate-y: -0.25rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(34 34 34 / var(--tw-bg-opacity, 1));
  }
  &:hover {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity, 1));
  }
  &:hover {
    --tw-shadow: 10px 10px 0 #000;
    --tw-shadow-colored: 10px 10px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  &:hover {
    @keyframes slide {
      from {
        left: -100%;
      }

      to {
        left: 100%;
      }
    }
    &::before {
      animation: slide 2s infinite;
    }
    &::before {
      opacity: 1;
    }
    & > span {
      --tw-skew-x: -5deg;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
  }
  &:active {
    --tw-translate-x: 0.25rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &:active {
    --tw-translate-y: 0.25rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &:active {
    --tw-border-opacity: 1;
    border-color: rgb(34 34 34 / var(--tw-border-opacity, 1));
  }
  &:active {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }
  &:active {
    --tw-text-opacity: 1;
    color: rgb(34 34 34 / var(--tw-text-opacity, 1));
  }
  &:active {
    --tw-shadow: 0px 0px 0 #00a4ef;
    --tw-shadow-colored: 0px 0px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  &:active {
    & > span {
      --tw-skew-x: 5deg;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
  }
  & > span {
    position: relative;
  }
  & > span {
    z-index: 1;
  }
  & > span {
    display: flex;
  }
  & > span {
    flex-direction: column;
  }
  & > span {
    line-height: 1.2;
  }
  & > span {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: .3s;
  }
  & > span {
    transition-duration: 0.2s;
  }
  & > span {
    transition-timing-function: ease-out;
  }
  & > span {
    &:first-child {
      font-size: 11px;
    }
    &:first-child {
      text-transform: uppercase;
    }
    &:last-child {
      font-size: 1rem;
      line-height: 1.5rem;
    }
    &:last-child {
      text-transform: uppercase;
    }
  }
  &:active {
    background-color: PaleTurquoise;
  }
  &:not(:hover) {
    animation-play-state: paused;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.\!left-0 {
  left: 0px !important;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.left-1\/2 {
  left: 50%;
}

.left-\[50\%\] {
  left: 50%;
}

.right-0 {
  right: 0px;
}

.top-1\/2 {
  top: 50%;
}

.top-\[50\%\] {
  top: 50%;
}

.top-\[65\%\] {
  top: 65%;
}

.float-right {
  float: right;
}

.\!m-0 {
  margin: 0px !important;
}

.\!m-auto {
  margin: auto !important;
}

.m-auto {
  margin: auto;
}

.\!my-\[20px\] {
  margin-top: 20px !important;
  margin-bottom: 20px !important;
}

.-mx-8 {
  margin-left: -2rem;
  margin-right: -2rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.\!ml-\[120px\] {
  margin-left: 120px !important;
}

.mb-0 {
  margin-bottom: 0px;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mt-\[24px\] {
  margin-top: 24px;
}

.mt-\[70px\] {
  margin-top: 70px;
}

.box-border {
  box-sizing: border-box;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.h-\[46px\] {
  height: 46px;
}

.h-\[60px\] {
  height: 60px;
}

.h-\[calc\(100\%-127px\)\] {
  height: calc(100% - 127px);
}

.h-full {
  height: 100%;
}

.w-\[150px\] {
  width: 150px;
}

.w-\[169px\] {
  width: 169px;
}

.w-\[200px\] {
  width: 200px;
}

.w-\[250px\] {
  width: 250px;
}

.w-\[300px\] {
  width: 300px;
}

.w-\[50\%\] {
  width: 50%;
}

.w-\[52px\] {
  width: 52px;
}

.w-\[55\%\] {
  width: 55%;
}

.w-\[70\%\] {
  width: 70%;
}

.w-\[90\%\] {
  width: 90%;
}

.w-full {
  width: 100%;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-\[50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-2\/4 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-\[50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[100\%\] {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[100px\] {
  --tw-translate-x: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[150px\] {
  --tw-translate-x: 150px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[20\%\] {
  --tw-translate-x: 20%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[200\%\] {
  --tw-translate-x: 200%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[200px\] {
  --tw-translate-x: 200px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[250px\] {
  --tw-translate-x: 250px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[300\%\] {
  --tw-translate-x: 300%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[40\%\] {
  --tw-translate-x: 40%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[400px\] {
  --tw-translate-x: 400px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[450px\] {
  --tw-translate-x: 450px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[480px\] {
  --tw-translate-x: 480px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[50\%\] {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[500px\] {
  --tw-translate-x: 500px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[610px\] {
  --tw-translate-x: 610px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[650px\] {
  --tw-translate-x: 650px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[70\%\] {
  --tw-translate-x: 70%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[700px\] {
  --tw-translate-x: 700px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[70px\] {
  --tw-translate-x: 70px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[90px\] {
  --tw-translate-x: 90px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[10\%\] {
  --tw-translate-y: 10%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[100\%\] {
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[100px\] {
  --tw-translate-y: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[120px\] {
  --tw-translate-y: 120px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[150px\] {
  --tw-translate-y: 150px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[200px\] {
  --tw-translate-y: 200px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[270px\] {
  --tw-translate-y: 270px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[280px\] {
  --tw-translate-y: 280px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[290px\] {
  --tw-translate-y: 290px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[300\%\] {
  --tw-translate-y: 300%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[340px\] {
  --tw-translate-y: 340px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[400px\] {
  --tw-translate-y: 400px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[50\%\] {
  --tw-translate-y: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[80px\] {
  --tw-translate-y: 80px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[90\%\] {
  --tw-translate-y: 90%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[-30deg\] {
  --tw-rotate: -30deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[30deg\] {
  --tw-rotate: 30deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes wave {
  to {
    background-position: calc(50% + 1.6em) 0, calc(50% + 3.2em) 0.8em;
  }
}

.animate-wave {
  animation: wave 2s linear infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.gap-4 {
  gap: 1rem;
}

.gap-8 {
  gap: 2rem;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded-\[4px\] {
  border-radius: 4px;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.border-\[3px\] {
  border-width: 3px;
}

.border-solid {
  border-style: solid;
}

.border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
}

.bg-\[\#000\] {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(34 34 34 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-\[15px\] {
  padding-left: 15px;
  padding-right: 15px;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.pl-\[100px\] {
  padding-left: 100px;
}

.pl-\[120px\] {
  padding-left: 120px;
}

.\!text-left {
  text-align: left !important;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.font-arsenal {
  font-family: Arsenal, sans-serif;
}

.\!text-5xl {
  font-size: 3rem !important;
  line-height: 1 !important;
}

.\!text-\[14px\] {
  font-size: 14px !important;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-7xl {
  font-size: 4.5rem;
  line-height: 1;
}

.text-\[62px\] {
  font-size: 62px;
}

.font-bold {
  font-weight: 700;
}

.italic {
  font-style: italic;
}

.\!leading-5 {
  line-height: 1.25rem !important;
}

.leading-6 {
  line-height: 1.5rem;
}

.leading-none {
  line-height: 1;
}

.\!text-black {
  --tw-text-opacity: 1 !important;
  color: rgb(34 34 34 / var(--tw-text-opacity, 1)) !important;
}

.\!text-light-gray {
  --tw-text-opacity: 1 !important;
  color: rgb(152 164 176 / var(--tw-text-opacity, 1)) !important;
}

.text-light-gray {
  --tw-text-opacity: 1;
  color: rgb(152 164 176 / var(--tw-text-opacity, 1));
}

.text-orange {
  --tw-text-opacity: 1;
  color: rgb(255 125 67 / var(--tw-text-opacity, 1));
}

.text-red {
  --tw-text-opacity: 1;
  color: rgb(245 67 54 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.no-underline {
  text-decoration-line: none;
}

.\!opacity-\[30\%\] {
  opacity: 30% !important;
}

.opacity-90 {
  opacity: 0.9;
}

.shadow-\[0_20px_50px_rgb\(0_0_0_\/_30\%\)\] {
  --tw-shadow: 0 20px 50px rgb(0 0 0 / 30%);
  --tw-shadow-colored: 0 20px 50px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-\[6px_6px_0_\#00a4ef\] {
  --tw-shadow: 6px 6px 0 #00a4ef;
  --tw-shadow-colored: 6px 6px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: .3s;
}

.duration-\[0\.1s\] {
  transition-duration: 0.1s;
}

.ease-\[ease-out\] {
  transition-timing-function: ease-out;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.shower.list .list-hidden {
  display: none;
}

@keyframes jump-left {
  from {
    content: var(--tw-content);
    left: 0;
  }

  to {
    content: var(--tw-content);
    left: calc(100% - 10px);
  }
}

@keyframes jump-top {
  from {
    content: var(--tw-content);
    top: 0;
  }

  to {
    content: var(--tw-content);
    top: -0.1px;
  }
}

.before\:animate-jump::before {
  content: var(--tw-content);
  animation: jump-left 1.5s linear infinite alternate, jump-top 0.75s cubic-bezier(0, 200, 0.8, 200) infinite;
}

.before\:rounded-sm::before {
  content: var(--tw-content);
  border-radius: 0.125rem;
}

.before\:bg-orange::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 125 67 / var(--tw-bg-opacity, 1));
}

.before\:content-\[\'\417\430\433\440\443\437\43A\430\.\.\.\'\]::before {
  --tw-content: 'Загрузка...';
  content: var(--tw-content);
}

.group:has(.group-has-\[\&\.visited\]\:hidden.visited) .group-has-\[\&\.visited\]\:hidden {
  display: none;
}

@layer reset {
  body {
    -webkit-text-size-adjust: 100%;
    -webkit-tap-highlight-color: transparent;
    -webkit-font-smoothing: antialiased;
  }

  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-inline-size: 100%;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    overflow-wrap: break-word;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  h1& {
    text-wrap: balance;
  }

  p {
    text-wrap: pretty;
  }

  video::cue {
    font-size: 1rem;
    line-height: 1.5rem;
  }
}
